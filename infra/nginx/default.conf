server {
  resolver "kube-dns.kube-system.svc.cluster.local";
  set $aelita_endpoint "aelita.default.svc.cluster.local";
  listen 80;
  server_name aelita-mergebot.xyz;
  location = /healthz {
    return 200 'I eat only good food.';
    access_log off;
  }
  location /github-notice {
    proxy_pass http://$aelita_endpoint:6000;
  }
  location /github-status {
    proxy_pass http://$aelita_endpoint:5000;
  }
  location / {
    if ($http_x_forwarded_proto = "http") {
      return 301 https://$host$request_uri;
    }
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; ";
    proxy_pass http://$aelita_endpoint:8000;
  }
}

server {
  resolver "kube-dns.kube-system.svc.cluster.local";
  set $signup_endpoint "signup.default.svc.cluster.local";
  listen 80;
  server_name aelitabot.xyz;
  location = /healthz {
    return 200 'Can I haz cheezeburger?';
    access_log off;
  }
  gzip_static always;
  add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; ";
  location / {
    root /www/;
    try_files $uri @backend;
  }
  location /static {
    root /www/;
    tcp_nopush on;
    expires max;
  }
  location @backend {
    if ($http_x_forwarded_proto = "http") {
      return 301 https://$host$request_uri;
    }
    uwsgi_pass $signup_endpoint:8000;
    include uwsgi_params;
  }
}

