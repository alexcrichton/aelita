apiVersion: v1
kind: Service
metadata:
  name: aelita
spec:
  type: NodePort
  ports:
    - name: github-notice
      port: 6000
      targetPort: 6000
      protocol: TCP
    - name: github-status
      port: 5000
      targetPort: 5000
      protocol: TCP
    - name: queue-view
      port: 8000
      targetPort: 8000
      protocol: TCP
  selector:
    app: aelita

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: aelita
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: aelita
    spec:
      containers:
        - name: aelita
          image: gcr.io/aelita-1374/aelita:INSERT_CURRENT_VERSION_HERE
          ports:
            - containerPort: 5000
            - containerPort: 6000
            - containerPort: 8000
          env:
            - name: AELITA_UI_TYPE
              value: github
            - name: AELITA_PIPELINE_DB
              value: postgresql://postgres:INSERT_POSTGRES_PIPELINES_PASSWORD_HERE@postgres-pipelines.default.svc.cluster.local
            - name: AELITA_PROJECT_DB
              value: postgresql://postgres:INSERT_POSTGRES_CONFIGS_PASSWORD_HERE@postgres-configs.default.svc.cluster.local
            - name: AELITA_UI_GITHUB_DB
              value: postgresql://postgres:INSERT_POSTGRES_CACHES_PASSWORD_HERE@postgres-caches.default.svc.cluster.local
            - name: AELITA_UI_GITHUB_LISTEN
              value: 0.0.0.0:6000
            - name: AELITA_UI_GITHUB_HOST
              value: https://api.github.com
            - name: AELITA_UI_GITHUB_USER
              value: aelita-mergebot
            - name: AELITA_UI_GITHUB_TOKEN
              value: INSERT_GITHUB_PERSONAL_ACCESS_TOKEN_HERE
            - name: AELITA_UI_GITHUB_SECRET
              value: INSERT_GITHUB_WEBHOOK_SECRET_HERE
            - name: AELITA_CI_TYPE
              value: github_status
            - name: AELITA_CI_GITHUB_LISTEN
              value: 0.0.0.0:5000
            - name: AELITA_CI_GITHUB_SECRET
              value: INSERT_GITHUB_STATUS_WEBHOOK_SECRET_HERE
            - name: AELITA_VCS_TYPE
              value: github
            - name: AELITA_VCS_GITHUB_HOST
              value: https://api.github.com
            - name: AELITA_VCS_GITHUB_TOKEN
              value: INSERT_GITHUB_PERSONAL_ACCESS_TOKEN_HERE
            - name: AELITA_VIEW_LISTEN
              value: 0.0.0.0:8000
            - name: AELITA_VIEW_SECRET
              value: INSERT_VIEW_SECRET_HERE
          readinessProbe:
            httpGet:
              path: /
              port: 8000
            initialDelaySeconds: 5
            timeoutSeconds: 1

---

apiVersion: v1
kind: Service
metadata:
  name: signup
spec:
  type: NodePort
  ports:
    - name: http
      port: 8000
      targetPort: 8000
      protocol: TCP
  selector:
    app: signup

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: signup
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: signup
    spec:
      containers:
        - name: signup
          image: gcr.io/aelita-1374/signup:INSERT_CURRENT_VERSION_HERE
          ports:
            - containerPort: 8000
          env:
            - name: AELITA_GITHUB_CLIENT_ID
              value: INSERT_GITHUB_CLIENT_ID_HERE
            - name: AELITA_GITHUB_CLIENT_SECRET
              value: INSERT_GITHUB_CLIENT_SECRET_HERE
            - name: AELITA_BOT_USERNAME
              value: aelita-mergebot
            - name: AELITA_BOT_BASEURL
              value: https://aelita-mergebot.xyz
            - name: AELITA_BOT_DBURI
              value: postgresql://postgres:INSERT_POSTGRES_CONFIGS_PASSWORD_HERE@postgres-configs
            - name: AELITA_BOT_ACCESS_TOKEN
              value: INSERT_GITHUB_PERSONAL_ACCESS_TOKEN_HERE
            - name: AELITA_VIEW_SECRET
              value: INSERT_VIEW_SECRET_HERE
            - name: AELITA_BOT_NOTICE_SECRET
              value: INSERT_GITHUB_WEBHOOK_SECRET_HERE
            - name: AELITA_BOT_STATUS_SECRET
              value: INSERT_GITHUB_STATUS_WEBHOOK_SECRET_HERE
            - name: SENTRY_DSN
              value: INSERT_SENTRY_DSN_HERE
          readinessProbe:
            tcpSocket:
              port: 8000
            initialDelaySeconds: 5
            timeoutSeconds: 1

---

apiVersion: v1
kind: Service
metadata:
  name: postgres-pipelines
spec:
  ports:
    - name: postgres-pipelines
      port: 5432
      targetPort: 5432
      protocol: TCP
  selector:
    app: postgres-pipelines

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: postgres-pipelines
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres-pipelines
    spec:
      containers:
        - name: postgres-pipelines
          image: postgres
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              value: INSERT_POSTGRES_PIPELINES_PASSWORD_HERE
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: aelita-pipelines
      volumes:
        - name: aelita-pipelines
          persistentVolumeClaim:
            claimName: postgres-pipelines

---

apiVersion: v1
kind: Service
metadata:
  name: postgres-caches
spec:
  ports:
    - name: postgres-caches
      port: 5432
      targetPort: 5432
      protocol: TCP
  selector:
    app: postgres-caches

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: postgres-caches
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres-caches
    spec:
      containers:
        - name: postgres-caches
          image: postgres
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              value: INSERT_POSTGRES_CACHES_PASSWORD_HERE
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: aelita-caches
      volumes:
        - name: aelita-caches
          persistentVolumeClaim:
            claimName: postgres-caches

---

apiVersion: v1
kind: Service
metadata:
  name: postgres-configs
spec:
  ports:
    - name: postgres-configs
      port: 5432
      targetPort: 5432
      protocol: TCP
  selector:
    app: postgres-configs

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: postgres-configs
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres-configs
    spec:
      containers:
        - name: postgres-configs
          image: postgres
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              value: INSERT_POSTGRES_CONFIGS_PASSWORD_HERE
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: aelita-configs
      volumes:
        - name: aelita-configs
          persistentVolumeClaim:
            claimName: postgres-configs

---


apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  type: NodePort
  ports:
    - name: http
      port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app: nginx

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: gcr.io/aelita-1374/nginx:INSERT_CURRENT_VERSION_HERE
          ports:
            - containerPort: 80
          readinessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 5
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /
              port: 80
              httpHeaders:
                Host: "aelitabot.xyz"
            initialDelaySeconds: 30
            timeoutSeconds: 2

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: nginx-ingress
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "gce"
spec:
  tls:
    - secretName: aelitabot-tls
      hosts:
        - aelitabot.xyz
        - aelita-mergebot.xyz
  backend:
    serviceName: nginx
    servicePort: 80

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kube-lego
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: kube-lego
    spec:
      containers:
        - name: kube-lego
          image: jetstack/kube-lego:0.1.2
          ports:
            - containerPort: 8080
          env:
            - name: LEGO_EMAIL
              value: "michael@notriddle.com"
            - name: LEGO_URL
              value: "https://acme-v01.api.letsencrypt.org/directory"
            - name: LEGO_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LEGO_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 1

